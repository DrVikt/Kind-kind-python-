#Подвиг 5. Реализуйте в программе следующее замыкание функций. Объявите внешнюю функцию с одним параметром tp, в который будет передаваться тип коллекции (строка). В теле внешней функции объявите вложенную функцию с одним параметром, которая преобразует строку (переданную через параметр) с набором целых чисел, записанных через пробел, либо в список, либо в кортеж. Тип коллекции определяется параметром tp внешней функции. Если tp = 'list', то используется список, иначе (при другом значении) - кортеж. При этом внешняя функция должна возвращать ссылку на вложенную функцию.
#Далее, на вход программы поступают две строки: первая - это значение для параметра tp; вторая - последовательность целых чисел, записанных через пробел. Прочитайте их и с помощью реализованного замыкания преобразуйте эти данные в соответствующую коллекцию. Результат работы вложенной функции (сохраненный через переменную lst) выведите на экран командой:
#print(lst)
#Обратите внимание, что в возвращаемой коллекции должны присутствовать числа, а не их строковые представления.
#Тесты: https://github.com/selfedu-rus/test-python-base/tree/main/7/7.10.5
#Sample Input:
#list
#-5 6 8 11 0 111 -456 3
#Sample Output:
#[-5, 6, 8, 11, 0, 111, -456, 3]


# put your python code here
def counter_add(tp):
    def counter_inc(x):
        st = x if tp == "list" else tuple(x)
        return st
    return counter_inc


cnt = counter_add(input().lower())
print(cnt(list(map(int,input().split()))))
