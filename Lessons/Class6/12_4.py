#Подвиг 4. Объявите функцию с именем get_list, одним параметром и следующим описанием в теле функции:
#'''Функция для формирования списка целых значений'''
#Сама функция должна формировать и возвращать список целых чисел, который передается ей на вход в виде строки из целых чисел, записанных через пробел.
#Определите декоратор, который выполняет суммирование значений списка, возвращаемого декорируемой функцией и возвращает результат. Внутри декоратора декорируйте переданную функцию с помощью команды @wraps (не забудьте сделать импорт: from functools import wraps).
#Такое декорирование необходимо, чтобы исходная функция get_list сохраняла свои локальные свойства: __name__ и __doc__.
#Примените декоратор к функции get_list, но не вызывайте ее.


from functools import wraps

# здесь продолжайте программу

def decor_list(func):
    @wraps(func)
    def wrapper(*args):
        return sum(func(*args))
    return wrapper


@decor_list
def get_list(x):
    """Функция для формирования списка целых значений"""
    return list(map(int, x.split()))  