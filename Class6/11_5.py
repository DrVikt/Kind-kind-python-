#Подвиг 5. Объявите функцию, которая принимает строку с кириллицей и латиницей и преобразовывает русские символы в латиницу, используя следующий словарь для замены русских букв на соответствующее латинское написание:
#t = {'ё': 'yo', 'а': 'a', 'б': 'b', 'в': 'v', 'г': 'g', 'д': 'd', 'е': 'e', 'ж': 'zh',
#     'з': 'z', 'и': 'i', 'й': 'y', 'к': 'k', 'л': 'l', 'м': 'm', 'н': 'n', 'о': 'o', 'п': 'p',
#     'р': 'r', 'с': 's', 'т': 't', 'у': 'u', 'ф': 'f', 'х': 'h', 'ц': 'c', 'ч': 'ch', 'ш': 'sh',
#     'щ': 'shch', 'ъ': '', 'ы': 'y', 'ь': '', 'э': 'e', 'ю': 'yu', 'я': 'ya'}
#Функция должна возвращать преобразованную строку. Замены делать без учета регистра (переданную строку перевести в нижний регистр - малые буквы). Небуквенные символы " : ;.,_" превращать в символ '-' (дефиса).
#Определите декоратор для этой функции, который несколько подряд идущих дефисов, превращает в один дефис. Полученная строка должна возвращаться при вызове декоратора. (Сам декоратор на экран ничего выводить не должен).
#Примените декоратор к первой функции и вызовите ее для строки s, прочитанной из входного потока командой:
#s = input()
#Результат работы декорированной функции отобразите на экране.
#Тесты: https://github.com/selfedu-rus/test-python-base/tree/main/7/7.11.5
#Sample Input:
#Python - это круто!
#Sample Output:
#python-eto-kruto!



t = {'ё': 'yo', 'а': 'a', 'б': 'b', 'в': 'v', 'г': 'g', 'д': 'd', 'е': 'e', 'ж': 'zh',
     'з': 'z', 'и': 'i', 'й': 'y', 'к': 'k', 'л': 'l', 'м': 'm', 'н': 'n', 'о': 'o', 'п': 'p',
     'р': 'r', 'с': 's', 'т': 't', 'у': 'u', 'ф': 'f', 'х': 'h', 'ц': 'c', 'ч': 'ch', 'ш': 'sh',
     'щ': 'shch', 'ъ': '', 'ы': 'y', 'ь': '', 'э': 'e', 'ю': 'yu', 'я': 'ya'}
t_n = [':',' ',';', '.', ',', '_']
# здесь продолжайте программу
st = input().lower()


def show_char(func):
    def wrapper(*args):
        c = func(*args)
        c = ["-" if i in t_n else i for i in c]
        c = "".join(c)
        while '--' in c:
            c = c.replace('--', '-')
        return c
    return wrapper


@show_char
def get_lat(s):
    s_out=[t.get(i) if i in t else i for i in s]
    return "".join(s_out)


print(get_lat(st))
    